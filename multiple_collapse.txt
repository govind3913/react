import * as React from 'react';
import { styled, useTheme, Theme, CSSObject } from '@mui/material/styles';
import Box from '@mui/material/Box';
import MuiDrawer from '@mui/material/Drawer';
import MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';
import Toolbar from '@mui/material/Toolbar';
import List from '@mui/material/List';
import CssBaseline from '@mui/material/CssBaseline';
import Typography from '@mui/material/Typography';
import Divider from '@mui/material/Divider';
import IconButton from '@mui/material/IconButton';
import MenuIcon from '@mui/icons-material/Menu';
import ChevronLeftIcon from '@mui/icons-material/ChevronLeft';
import ChevronRightIcon from '@mui/icons-material/ChevronRight';
import ListItem from '@mui/material/ListItem';
import ListItemButton from '@mui/material/ListItemButton';
import ListItemIcon from '@mui/material/ListItemIcon';
import ListItemText from '@mui/material/ListItemText';
import Collapse from '@mui/material/Collapse';
import InboxIcon from '@mui/icons-material/MoveToInbox';
import MailIcon from '@mui/icons-material/Mail';
import ExpandLess from '@mui/icons-material/ExpandLess';
import ExpandMore from '@mui/icons-material/ExpandMore';
import Menu from '@mui/material/Menu';
import MenuItem from '@mui/material/MenuItem';
import DraftsIcon from '@mui/icons-material/Drafts';
import SendIcon from '@mui/icons-material/Send';
import PriorityHighIcon from '@mui/icons-material/PriorityHigh';

const drawerWidth = 240;

const openedMixin = (theme: Theme): CSSObject => ({
  width: drawerWidth,
  transition: theme.transitions.create('width', {
    easing: theme.transitions.easing.sharp,
    duration: theme.transitions.duration.enteringScreen,
  }),
  overflowX: 'hidden',
});

const closedMixin = (theme: Theme): CSSObject => ({
  transition: theme.transitions.create('width', {
    easing: theme.transitions.easing.sharp,
    duration: theme.transitions.duration.leavingScreen,
  }),
  overflowX: 'hidden',
  width: `calc(${theme.spacing(7)} + 1px)`,
  [theme.breakpoints.up('sm')]: {
    width: `calc(${theme.spacing(8)} + 1px)`,
  },
});

const DrawerHeader = styled('div')(({ theme }) => ({
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'flex-end',
  padding: theme.spacing(0, 1),
  // necessary for content to be below app bar
  ...theme.mixins.toolbar,
}));

interface AppBarProps extends MuiAppBarProps {
  open?: boolean;
}

const AppBar = styled(MuiAppBar, {
  shouldForwardProp: (prop) => prop !== 'open',
})<AppBarProps>(({ theme, open }) => ({
  zIndex: theme.zIndex.drawer + 1,
  transition: theme.transitions.create(['width', 'margin'], {
    easing: theme.transitions.easing.sharp,
    duration: theme.transitions.duration.leavingScreen,
  }),
  ...(open && {
    marginLeft: drawerWidth,
    width: `calc(100% - ${drawerWidth}px)`,
    transition: theme.transitions.create(['width', 'margin'], {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.enteringScreen,
    }),
  }),
}));

const Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(
  ({ theme, open }) => ({
    width: drawerWidth,
    flexShrink: 0,
    whiteSpace: 'nowrap',
    boxSizing: 'border-box',
    ...(open && {
      ...openedMixin(theme),
      '& .MuiDrawer-paper': openedMixin(theme),
    }),
    ...(!open && {
      ...closedMixin(theme),
      '& .MuiDrawer-paper': closedMixin(theme),
    }),
  }),
);

const SubMenuWrapper = styled('div')({
  display: 'flex',
  alignItems: 'center',
});

export default function MiniDrawer() {
  const theme = useTheme();
  const [open, setOpen] = React.useState(false);
  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);
  const [submenuIndex, setSubmenuIndex] = React.useState<number | null>(null);
  const [submenu1Open, setSubmenu1Open] = React.useState(false);
  const [submenu2Open, setSubmenu2Open] = React.useState(false);
  const [submenu3Open, setSubmenu3Open] = React.useState(false);
  const [submenu4Open, setSubmenu4Open] = React.useState(false);
  const [submenu5Open, setSubmenu5Open] = React.useState(false);

  const handleDrawerOpen = () => {
    setOpen(true);
  };

  const handleDrawerClose = () => {
    setOpen(false);
    setAnchorEl(null);
    setSubmenuIndex(null);
  };

  const handleSubmenuMouseEnter = (event: React.MouseEvent<HTMLElement>, index: number) => {
    if (!open) {
      setAnchorEl(event.currentTarget);
      setSubmenuIndex(index);
    }
  };

  const handleSubmenuMouseLeave = () => {
    if (!open) {
      setAnchorEl(null);
      setSubmenuIndex(null);
    }
  };

  const handleCloseMenu = () => {
    setAnchorEl(null);
    setSubmenuIndex(null);
  };

  const handleSubmenu1Toggle = () => {
    setSubmenu1Open(!submenu1Open);
  };

  const handleSubmenu2Toggle = () => {
    setSubmenu2Open(!submenu2Open);
  };

  const handleSubmenu3Toggle = () => {
    setSubmenu3Open(!submenu3Open);
  };

  const handleSubmenu4Toggle = () => {
    setSubmenu4Open(!submenu4Open);
  };

  const handleSubmenu5Toggle = () => {
    setSubmenu5Open(!submenu5Open);
  };

  return (
    <Box sx={{ display: 'flex' }}>
      <CssBaseline />
      <AppBar position="fixed" open={open}>
        <Toolbar>
          <IconButton
            color="inherit"
            aria-label="open drawer"
            onClick={handleDrawerOpen}
            edge="start"
            sx={{
              marginRight: 5,
              ...(open && { display: 'none' }),
            }}
          >
            <MenuIcon />
          </IconButton>
          <Typography variant="h6" noWrap component="div">
            Mini variant drawer
          </Typography>
        </Toolbar>
      </AppBar>
      <Drawer variant="permanent" open={open}>
        <DrawerHeader>
          <IconButton onClick={handleDrawerClose}>
            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}
          </IconButton>
        </DrawerHeader>
        <Divider />
        <List>
          <ListItem disablePadding sx={{ display: 'block' }}>
            <SubMenuWrapper
              onMouseEnter={(event) => handleSubmenuMouseEnter(event, 0)}
              onMouseLeave={handleSubmenuMouseLeave}
            >
              <ListItemButton
                sx={{
                  minHeight: 48,
                  justifyContent: open ? 'initial' : 'center',
                  px: 2.5,
                }}
                onClick={handleSubmenu1Toggle}
              >
                <ListItemIcon
                  sx={{
                    minWidth: 0,
                    mr: open ? 3 : 'auto',
                    justifyContent: 'center',
                  }}
                >
                  <InboxIcon />
                </ListItemIcon>
                <ListItemText primary="Submenu 1" sx={{ opacity: open ? 1 : 0 }} />
                {open ? (submenu1Open ? <ExpandLess /> : <ExpandMore />) : null}
              </ListItemButton>
              <Menu
                anchorEl={anchorEl}
                open={Boolean(anchorEl) && submenuIndex === 0}
                onClose={handleCloseMenu}
                onMouseLeave={handleSubmenuMouseLeave}
              >
                {['Submenu Item 1', 'Submenu Item 2', 'Submenu Item 3'].map((item, index) => (
                  <MenuItem key={item} onClick={handleCloseMenu}>
                    <ListItemIcon>
                      {index === 0 ? <DraftsIcon /> : index === 1 ? <SendIcon /> : <PriorityHighIcon />}
                    </ListItemIcon>
                    {item}
                  </MenuItem>
                ))}
              </Menu>
            </SubMenuWrapper>
            <Collapse in={open && submenu1Open} timeout="auto" unmountOnExit>
              <List component="div" disablePadding>
                {['Submenu Item 1', 'Submenu Item 2', 'Submenu Item 3'].map((text, index) => (
                  <ListItem key={text} disablePadding sx={{ display: 'block' }}>
                    <ListItemButton
                      sx={{
                        minHeight: 48,
                        justifyContent: open ? 'initial' : 'center',
                        pl: open ? 4 : 2.5,
                      }}
                    >
                      <ListItemIcon>
                        {index === 0 ? <DraftsIcon /> : index === 1 ? <SendIcon /> : <PriorityHighIcon />}
                      </ListItemIcon>
                      <ListItemText primary={text} sx={{ opacity: open ? 1 : 0 }} />
                    </ListItemButton>
                  </ListItem>
                ))}
              </List>
            </Collapse>
          </ListItem>
          {/* Similarly handle other submenu items */}
          {/* Second submenu */}
          <ListItem disablePadding sx={{ display: 'block' }}>
            <SubMenuWrapper
              onMouseEnter={(event) => handleSubmenuMouseEnter(event, 1)}
              onMouseLeave={handleSubmenuMouseLeave}
            >
              <ListItemButton
                sx={{
                  minHeight: 48,
                  justifyContent: open ? 'initial' : 'center',
                  px: 2.5,
                }}
                onClick={handleSubmenu2Toggle}
              >
                <ListItemIcon
                  sx={{
                    minWidth: 0,
                    mr: open ? 3 : 'auto',
                    justifyContent: 'center',
                  }}
                >
                  <InboxIcon />
                </ListItemIcon>
                <ListItemText primary="Submenu 2" sx={{ opacity: open ? 1 : 0 }} />
                {open ? (submenu2Open ? <ExpandLess /> : <ExpandMore />) : null}
              </ListItemButton>
              <Menu
                anchorEl={anchorEl}
                open={Boolean(anchorEl) && submenuIndex === 1}
                onClose={handleCloseMenu}
                onMouseLeave={handleSubmenuMouseLeave}
              >
                {['Submenu Item 1', 'Submenu Item 2', 'Submenu Item 3'].map((item, index) => (
                  <MenuItem key={item} onClick={handleCloseMenu}>
                    <ListItemIcon>
                      {index === 0 ? <DraftsIcon /> : index === 1 ? <SendIcon /> : <PriorityHighIcon />}
                    </ListItemIcon>
                    {item}
                  </MenuItem>
                ))}
              </Menu>
            </SubMenuWrapper>
            <Collapse in={open && submenu2Open} timeout="auto" unmountOnExit>
              <List component="div" disablePadding>
                {['Submenu Item 1', 'Submenu Item 2', 'Submenu Item 3'].map((text, index) => (
                  <ListItem key={text} disablePadding sx={{ display: 'block' }}>
                    <ListItemButton
                      sx={{
                        minHeight: 48,
                        justifyContent: open ? 'initial' : 'center',
                        pl: open ? 4 : 2.5,
                      }}
                    >
                      <ListItemIcon>
                        {index === 0 ? <DraftsIcon /> : index === 1 ? <SendIcon /> : <PriorityHighIcon />}
                      </ListItemIcon>
                      <ListItemText primary={text} sx={{ opacity: open ? 1 : 0 }} />
                    </ListItemButton>
                  </ListItem>
                ))}
              </List>
            </Collapse>
          </ListItem>
          {/* Third submenu */}
          <ListItem disablePadding sx={{ display: 'block' }}>
            <SubMenuWrapper
              onMouseEnter={(event) => handleSubmenuMouseEnter(event, 2)}
              onMouseLeave={handleSubmenuMouseLeave}
            >
              <ListItemButton
                sx={{
                  minHeight: 48,
                  justifyContent: open ? 'initial' : 'center',
                  px: 2.5,
                }}
                onClick={handleSubmenu3Toggle}
              >
                <ListItemIcon
                  sx={{
                    minWidth: 0,
                    mr: open ? 3 : 'auto',
                    justifyContent: 'center',
                  }}
                >
                  <InboxIcon />
                </ListItemIcon>
                <ListItemText primary="Submenu 3" sx={{ opacity: open ? 1 : 0 }} />
                {open ? (submenu3Open ? <ExpandLess /> : <ExpandMore />) : null}
              </ListItemButton>
              <Menu
                anchorEl={anchorEl}
                open={Boolean(anchorEl) && submenuIndex === 2}
                onClose={handleCloseMenu}
                onMouseLeave={handleSubmenuMouseLeave}
              >
                {['Submenu Item 1', 'Submenu Item 2', 'Submenu Item 3'].map((item, index) => (
                  <MenuItem key={item} onClick={handleCloseMenu}>
                    <ListItemIcon>
                      {index === 0 ? <DraftsIcon /> : index === 1 ? <SendIcon /> : <PriorityHighIcon />}
                    </ListItemIcon>
                    {item}
                  </MenuItem>
                ))}
              </Menu>
            </SubMenuWrapper>
            <Collapse in={open && submenu3Open} timeout="auto" unmountOnExit>
              <List component="div" disablePadding>
                {['Submenu Item 1', 'Submenu Item 2', 'Submenu Item 3'].map((text, index) => (
                  <ListItem key={text} disablePadding sx={{ display: 'block' }}>
                    <ListItemButton
                      sx={{
                        minHeight: 48,
                        justifyContent: open ? 'initial' : 'center',
                        pl: open ? 4 : 2.5,
                      }}
                    >
                      <ListItemIcon>
                        {index === 0 ? <DraftsIcon /> : index === 1 ? <SendIcon /> : <PriorityHighIcon />}
                      </ListItemIcon>
                      <ListItemText primary={text} sx={{ opacity: open ? 1 : 0 }} />
                    </ListItemButton>
                  </ListItem>
                ))}
              </List>
            </Collapse>
          </ListItem>
          {/* Fourth submenu */}
          <ListItem disablePadding sx={{ display: 'block' }}>
            <SubMenuWrapper
              onMouseEnter={(event) => handleSubmenuMouseEnter(event, 3)}
              onMouseLeave={handleSubmenuMouseLeave}
            >
              <ListItemButton
                sx={{
                  minHeight: 48,
                  justifyContent: open ? 'initial' : 'center',
                  px: 2.5,
                }}
                onClick={handleSubmenu4Toggle}
              >
                <ListItemIcon
                  sx={{
                    minWidth: 0,
                    mr: open ? 3 : 'auto',
                    justifyContent: 'center',
                  }}
                >
                  <InboxIcon />
                </ListItemIcon>
                <ListItemText primary="Submenu 4" sx={{ opacity: open ? 1 : 0 }} />
                {open ? (submenu4Open ? <ExpandLess /> : <ExpandMore />) : null}
              </ListItemButton>
              <Menu
                anchorEl={anchorEl}
                open={Boolean(anchorEl) && submenuIndex === 3}
                onClose={handleCloseMenu}
                onMouseLeave={handleSubmenuMouseLeave}
              >
                {['Submenu Item 1', 'Submenu Item 2', 'Submenu Item 3'].map((item, index) => (
                  <MenuItem key={item} onClick={handleCloseMenu}>
                    <ListItemIcon>
                      {index === 0 ? <DraftsIcon /> : index === 1 ? <SendIcon /> : <PriorityHighIcon />}
                    </ListItemIcon>
                    {item}
                  </MenuItem>
                ))}
              </Menu>
            </SubMenuWrapper>
            <Collapse in={open && submenu4Open} timeout="auto" unmountOnExit>
              <List component="div" disablePadding>
                {['Submenu Item 1', 'Submenu Item 2', 'Submenu Item 3'].map((text, index) => (
                  <ListItem key={text} disablePadding sx={{ display: 'block' }}>
                    <ListItemButton
                      sx={{
                        minHeight: 48,
                        justifyContent: open ? 'initial' : 'center',
                        pl: open ? 4 : 2.5,
                      }}
                    >
                      <ListItemIcon>
                        {index === 0 ? <DraftsIcon /> : index === 1 ? <SendIcon /> : <PriorityHighIcon />}
                      </ListItemIcon>
                      <ListItemText primary={text} sx={{ opacity: open ? 1 : 0 }} />
                    </ListItemButton>
                  </ListItem>
                ))}
              </List>
            </Collapse>
          </ListItem>
          {/* Fifth submenu */}
          <ListItem disablePadding sx={{ display: 'block' }}>
            <SubMenuWrapper
              onMouseEnter={(event) => handleSubmenuMouseEnter(event, 4)}
              onMouseLeave={handleSubmenuMouseLeave}
            >
              <ListItemButton
                sx={{
                  minHeight: 48,
                  justifyContent: open ? 'initial' : 'center',
                  px: 2.5,
                }}
                onClick={handleSubmenu5Toggle}
              >
                <ListItemIcon
                  sx={{
                    minWidth: 0,
                    mr: open ? 3 : 'auto',
                    justifyContent: 'center',
                  }}
                >
                  <InboxIcon />
                </ListItemIcon>
                <ListItemText primary="Submenu 5" sx={{ opacity: open ? 1 : 0 }} />
                {open ? (submenu5Open ? <ExpandLess /> : <ExpandMore />) : null}
              </ListItemButton>
              <Menu
                anchorEl={anchorEl}
                open={Boolean(anchorEl) && submenuIndex === 4}
                onClose={handleCloseMenu}
                onMouseLeave={handleSubmenuMouseLeave}
              >
                {['Submenu Item 1', 'Submenu Item 2', 'Submenu Item 3'].map((item, index) => (
                  <MenuItem key={item} onClick={handleCloseMenu}>
                    <ListItemIcon>
                      {index === 0 ? <DraftsIcon /> : index === 1 ? <SendIcon /> : <PriorityHighIcon />}
                    </ListItemIcon>
                    {item}
                  </MenuItem>
                ))}
              </Menu>
            </SubMenuWrapper>
            <Collapse in={open && submenu5Open} timeout="auto" unmountOnExit>
              <List component="div" disablePadding>
                {['Submenu Item 1', 'Submenu Item 2', 'Submenu Item 3'].map((text, index) => (
                  <ListItem key={text} disablePadding sx={{ display: 'block' }}>
                    <ListItemButton
                      sx={{
                        minHeight: 48,
                        justifyContent: open ? 'initial' : 'center',
                        pl: open ? 4 : 2.5,
                      }}
                    >
                      <ListItemIcon>
                        {index === 0 ? <DraftsIcon /> : index === 1 ? <SendIcon /> : <PriorityHighIcon />}
                      </ListItemIcon>
                      <ListItemText primary={text} sx={{ opacity: open ? 1 : 0 }} />
                    </ListItemButton>
                  </ListItem>
                ))}
              </List>
            </Collapse>
          </ListItem>
        </List>
        <Divider />
        <List>
          {/* Main menu items with icons */}
          {['All mail', 'Trash', 'Spam'].map((text, index) => (
            <ListItem key={text} disablePadding sx={{ display: 'block' }}>
              <ListItemButton
                sx={{
                  minHeight: 48,
                  justifyContent: open ? 'initial' : 'center',
                  px: 2.5,
                }}
              >
                <ListItemIcon
                  sx={{
                    minWidth: 0,
                    mr: open ? 3 : 'auto',
                    justifyContent: 'center',
                  }}
                >
                  {index === 0 ? <InboxIcon /> : index === 1 ? <MailIcon /> : <PriorityHighIcon />}
                </ListItemIcon>
                <ListItemText primary={text} sx={{ opacity: open ? 1 : 0 }} />
              </ListItemButton>
            </ListItem>
          ))}
        </List>
      </Drawer>
      <Box
        component="main"
        sx={{
          flexGrow: 1,
          p: 3,
          ...(open ? {} : { marginRight: `calc(${drawerWidth}px + ${theme.spacing(7)}px)` }),
          transition: theme.transitions.create('margin', {
            easing: theme.transitions.easing.sharp,
            duration: theme.transitions.duration.leavingScreen,
          }),
        }}
      >
        <DrawerHeader />
        <Typography paragraph>
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
          tempor incididunt ut labore et dolore magna aliqua. Rhoncus dolor purus non
          enim praesent elementum facilisis leo vel. Risus at ultrices mi tempus
          imperdiet. Semper risus in hendrerit gravida rutrum quisque non tellus.
          Convallis convallis tellus id interdum velit laoreet id donec ultrices.
          Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit
          adipiscing bibendum est ultricies integer quis. Cursus euismod quis viverra
          nibh cras. Metus vulputate eu scelerisque felis imperdiet proin fermentum
          leo. Mauris commodo quis imperdiet massa tincidunt. Cras tincidunt lobortis
          feugiat vivamus at augue. At augue eget arcu dictum varius duis at
          consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem donec massa
          sapien faucibus et molestie ac.
        </Typography>
        <Typography paragraph>
          Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper
          eget nulla facilisi etiam dignissim diam. Pulvinar elementum integer enim
          neque volutpat ac tincidunt. Ornare suspendisse sed nisi lacus sed viverra
          tellus. Purus sit amet volutpat consequat mauris. Elementum eu facilisis
          sed odio morbi. Euismod lacinia at quis risus sed vulputate odio. Morbi
          tincidunt ornare massa eget egestas purus viverra accumsan in. In hendrerit
          gravida rutrum quisque non tellus orci ac. Pellentesque nec nam aliquam sem
          et tortor. Habitant morbi tristique senectus et. Adipiscing elit duis
          tristique sollicitudin nibh sit. Ornare aenean euismod elementum nisi quis
          eleifend. Commodo viverra maecenas accumsan lacus vel facilisis. Nulla
          posuere sollicitudin aliquam ultrices sagittis orci a.
        </Typography>
      </Box>
    </Box>
  );
}
